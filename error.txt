Sub CleanUp()
'On Error Resume Next

Dim sPath As String
Dim sFile, sFilter As String
Dim Wb As Workbook
Dim ws As Worksheet
Dim strSegment, strFilename As String
Dim ThisWB, ThisWS
Dim currrow, i As Integer
Dim arrFilename, ret
Dim cell As Range
Dim VBObj As Variant
Dim strSaveFormat As String
Dim strNewName As String
Dim strSaveOption
Dim fileprefix
Dim fList() As Variant
Dim x As Variant
Dim sSiteName As String
Dim sAlias As String

'Cleanup list of file
currrow = 0
Do Until Range("FilesCleaned").Offset(currrow, 0).Value = ""
    Range("FilesCleaned").Offset(currrow, 0).Clear
    currrow = currrow + 1
Loop

'---Check if user is logged into TM1---
ActiveSheet.Calculate

If Clean.Range("TM1Username") = "" Then
    MsgBox "Not logged into TM1. Please log in first", vbExclamation
    Exit Sub
End If

Application.FileDialog(msoFileDialogFolderPicker).InitialFileName = Range("LastPath")
Application.FileDialog(msoFileDialogFolderPicker).Title = "Select the directory to process"

sPath = Application.FileDialog(msoFileDialogFolderPicker).Show
If sPath = 0 Or sPath = ActiveWorkbook.Path Then Exit Sub

sPath = Application.FileDialog(msoFileDialogFolderPicker).SelectedItems.Item(1) & "\"
ChDir sPath

ThisWB = Application.ActiveWorkbook.Name
ThisWS = Application.ActiveSheet.Name

Application.Range("LastPath").Value = sPath
sFile = Dir(sPath & "*.xlsm")

If sFile = "" Then
    MsgBox "Directory appears empty - please verify.", vbOKOnly, "Error Processing Directory"
    Exit Sub
End If

sFilter = Range("Filter").Value

'Do not process macros in the workbook we are about to open
Application.ScreenUpdating = False
Application.EnableEvents = False
Application.AskToUpdateLinks = False
Application.CalculateBeforeSave = False
Application.DisplayAlerts = False
Application.Interactive = True
Application.CalculateBeforeSave = False

Application.Calculation = xlCalculationManual
Application.CalculateBeforeSave = False

'strSaveFormat = Range("SaveFormat")
'Select Case strSaveFormat
'    Case "xls"
'strSaveOption = xlExcel8
strSaveOption = xlOpenXMLWorkbook
'    Case Else
'        strSaveOption = xlOpenXMLWorkbookMacroEnabled
'End Select

currrow = 0
Do While sFile <> ""
        ReDim Preserve fList(currrow + 1)
        fList(currrow) = sFile
        currrow = currrow + 1

        'Next File
        sFile = Dir
Loop

currrow = 0
For currrow = 0 To UBound(fList) - 1

 '   If InStr(1, UCase(fList(currrow)), UCase(sFilter)) > 0 Or sFilter = "" Then
    Range("FilesCleaned").Offset(currrow, 0).Value = fList(currrow)
    Set Wb = Workbooks.Open(sPath & fList(currrow))
    'Application.ScreenUpdating = True
    'Application.StatusBar = Wb.Name
    Application.ScreenUpdating = False
         
    Application.Run "Tm1Recalc"
    Application.EnableEvents = False
    
    
    
    If UCase(Clean.Range("Filter").Value) = "BBPS" Then
        Sheets("Master").Select
        Sheets("Master").Activate
        Sheets("Master").Calculate
    End If
    
    ActiveSheet.Range("B20:C23").NumberFormat = "@"
    
    DoGraphs
    Index_Update_ConditionalFormat
    
    For Each ws In Wb.Worksheets
        
        Application.StatusBar = Wb.Name & " - " & ws.Name
        Debug.Print Wb.Name & " - " & ws.Name

        ws.Activate
        'ws.Calculate
        'ws.PageSetup.PrintQuality = 600

        Range("a1").Select
        If Left(ws.Name, 2) <> "R-" And Left(ws.Name, 2) <> "Z-" Then
            ActiveWindow.Zoom = 100
        End If

        ' Select all cells with formulas then replace DBRAs
        On Error Resume Next
        Selection.SpecialCells(xlCellTypeFormulas, 23).Select
        For Each cell In Selection
            If InStr(1, cell.Formula, "DBRA(") > 0 Or InStr(1, cell.Formula, "DBRW(") > 0 _
            Or InStr(1, cell.Formula, "SUBNM(") > 0 Or InStr(1, cell.Formula, "DBR(") > 0 _
            Or InStr(1, cell.Formula, "ELPAR(") > 0 Or InStr(1, cell.Formula, "DBS(") > 0 _
            Or InStr(1, cell.Formula, "ELCOMPN(") > 0 Or InStr(1, cell.Formula, "SUBSIZ(") > 0 _
            Or InStr(1, cell.Formula, "VIEW(") > 0 Or InStr(1, cell.Formula, "DIMNM(") > 0 _
            Or InStr(1, cell.Formula, "TM1RPTROW(") > 0 Or InStr(1, cell.Formula, "CELLCHART(") > 0 _
            Or InStr(1, cell.Formula, "DBNA(") Or InStr(1, cell.Formula, "ELLEV(") > 0 Then
                If cell.Value = "*KEY_ERR" Or cell.Value = "" Then
                    cell.Formula = 0
                Else
                    cell.Formula = cell.Value
                End If
            End If
        Next

        With ActiveWindow
            .ScrollRow = 1
            .ScrollColumn = 1
            Call Cells(.ScrollRow, .ScrollColumn).Select
        End With
        
        If (Left(ws.Name, 2) = "R-" Or Left(ws.Name, 2) = "Z-") And ws.Name <> "Z-Data" Then
            ws.Visible = xlSheetHidden
        End If
        
        On Error GoTo 0

    Next

    'Remove PMF and other macros
'    For Each VBObj In Wb.VBProject.VBComponents
'        If VBObj.Name = "modClean" Then
'            MsgBox "Trying To Clean This Workbook!!!", vbCritical
'            Exit Sub
'        Else
'            If VBObj.Type <> 1 Then
'                '?
'            Else
'                Wb.VBProject.VBComponents.Remove Wb.VBProject.VBComponents.Item(VBObj.Name)
'            End If
'            For x = Wb.VBProject.VBComponents.Count To 1 Step -1
'                    Wb.VBProject.VBComponents(x).CodeModule.DeleteLines 1, Wb.VBProject.VBComponents(x).CodeModule.CountOfLines
'            Next x
'        End If
'    Next
'
'    'Save and Close
'    arrFilename = Split(fList(currrow), ".")
'    Dim bNewName As Boolean
'    bNewName = False
'
'    strFilename = ""
'    For i = 0 To UBound(arrFilename) - 1
'        If i > 0 Then strFilename = strFilename & "."
'        strFilename = strFilename & arrFilename(i)
'    Next
'    strFilename = strFilename & "." & strSaveFormat
'    bNewName = True
    
    'Check to see if we need to remove leading template prefix
'    fileprefix = Val(Left(arrFilename(0), 3))
'    If WorksheetFunction.IsNumber(fileprefix) Then
'            'Remove the prefix and save with new name
'            strFilename = Mid(strFilename, 4, Len(strFilename))
'            bNewName = True
'    End If
                 
'    If bNewName = True Then
'       If fList(currrow) <> strFilename Then
'           Application.DisplayAlerts = False
'           Wb.SaveAs Filename:=strFilename, FileFormat:=strSaveOption
'       Else
'           Wb.Save
'       End If
'       Wb.Close False
'       If fList(currrow) <> strFilename Then Kill fList(currrow)
'    Else
'            'Save the file we opened
'            Wb.Close True
'    End If
            
    'Open the file and then save it as PDF
    'Set Wb = Workbooks.Open(sPath & fList(currrow))
    
    
    '---Get updated site name----
    If (Run("ELLEV", Range("Dim_Site").Value, Range("Site").Value) = 0) Then
        sAlias = Run("DBRA", Range("Dim_Site").Value, Range("Site").Value, "FileName")
        If Range("Site").Value = sAlias Then
            sAlias = "COV_" & sAlias
        End If
        strNewName = Replace(Wb.Name, Range("Site").Value, sAlias)
    Else
        strNewName = Wb.Name
    End If
    
    Application.StatusBar = Wb.Name
    
    
    strNewName = Replace(strNewName, ".xlsm", ".xlsx")
    
    'Sheets(Array("Master", "Company", "Customer", "Colleague", "Citizenship", "Conduct")).Select
        

    If UCase(Clean.Range("Filter").Value) = "BBPS" Then
        Sheets("Master").Select
    ElseIf UCase(Clean.Range("Filter").Value) = "BBSA" Then
        Sheets("Scoring Outcome").Select
    End If
    
    Range("E5").Select

'    ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
'    sPath & "\" & strNewName, Quality:=xlQualityStandard, IncludeDocProperties:=False, IgnorePrintAreas _
'        :=False, OpenAfterPublish:=False
    
    'Wb.Save
    Application.DisplayAlerts = False
    Wb.SaveAs Filename:=strNewName, FileFormat:=strSaveOption
'    Wb.Save
    Wb.Close False
    

   ' End If
    
    'Next File
Skip:
Next

    Application.Interactive = True
    Application.StatusBar = False
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Application.AskToUpdateLinks = True
    Application.DisplayAlerts = True
    
    If currrow = 0 Then
        MsgBox "Nothing found", vbInformation, "Done"
    Else
        MsgBox "Cleanup completed - " & Str(currrow) & " files cleaned.", vbInformation, "Done"
    End If

End Sub
